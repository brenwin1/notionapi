[{"path":"https://brenwin1.github.io/notionapi/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 notionapi authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://brenwin1.github.io/notionapi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brenwin Ang. Author, maintainer, copyright holder.","code":""},{"path":"https://brenwin1.github.io/notionapi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ang B (2025). notionapi: R Client Notion API. R package version 0.0.0.9000, https://brenwin1.github.io/notionapi/.","code":"@Manual{,   title = {notionapi: R Client for the Notion API},   author = {Brenwin Ang},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://brenwin1.github.io/notionapi/}, }"},{"path":"https://brenwin1.github.io/notionapi/index.html","id":"notionapi","dir":"","previous_headings":"","what":"R Client for the Notion API","title":"R Client for the Notion API","text":"notionapi R client library Notion API, enabling users programmatically interact Notion workspaces. package provides complete API coverage managing pages databases, managing content blocks, handling comments retrieving user information. package designed mirror Official Notion JavaScript Client, using R6 classes provide familiar object-oriented interface consistent API structure.","code":""},{"path":"https://brenwin1.github.io/notionapi/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Client for the Notion API","text":"Install package CRAN: install development version GitHub:","code":"install.packages(\"notionapi\") pak::pak(\"brenwin1/notionapi\")"},{"path":"https://brenwin1.github.io/notionapi/index.html","id":"authentication","dir":"","previous_headings":"","what":"Authentication","title":"R Client for the Notion API","text":"initialise Notion client, need Notion integration token. Create integration Notion workspace following instructions. Copy integration token integration settings. Set token environment variable: Share pages/databases integration Notion. Restart R session load environment variable.","code":"usethis::edit_r_environ() # add NOTION_TOKEN=<your_integration_token>"},{"path":"https://brenwin1.github.io/notionapi/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"R Client for the Notion API","text":"Use notion_client() async_notion_client() create client instance accessing API endpoints: client organises methods logical endpoint groups like pages, databases, blocks. method maps directly endpoint, parameters available function arguments. See Notion API reference complete endpoint documentation.","code":"library(notionapi)  # Create a Notion client instance notion <- notion_client()  # Access the users endpoint to list all users in your Notion workspace notion$users$list() #> { #>   \"object\": \"list\", #>   \"results\": [ #>     { #>       \"object\": \"user\", #>       \"id\": \"fda12729-108d-4eb5-bbfb-a8f0886794d1\", #>       \"name\": \"Brenwin\", #>       \"avatar_url\": {}, #>       \"type\": \"person\", #>       \"person\": {} #>     }, #>     { #>       \"object\": \"user\", #>       \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\", #>       \"name\": \"brenwin-internal\", #>       \"avatar_url\": {}, #>       \"type\": \"bot\", #>       \"bot\": { #>         \"owner\": { #>           \"type\": \"workspace\", #>           \"workspace\": true #>         }, #>         \"workspace_name\": \"Brenwin's Notion\", #>         \"workspace_limits\": { #>           \"max_file_upload_size_in_bytes\": 5368709120 #>         } #>       } #>     } #>   ], #>   \"next_cursor\": {}, #>   \"has_more\": false, #>   \"type\": \"user\", #>   \"user\": {}, #>   \"request_id\": \"e048550d-958b-4787-a4e5-f96bbff2d21a\" #> }"},{"path":"https://brenwin1.github.io/notionapi/index.html","id":"serialisation","dir":"","previous_headings":"Usage","what":"Serialisation","title":"R Client for the Notion API","text":"R data structures automatically converted JSON format expected Notion API: lists -> JSON object list lists -> JSON array Examples can found throughout reference documentation. example, see CommentsEndpoint create() method.","code":""},{"path":"https://brenwin1.github.io/notionapi/index.html","id":"pagination","dir":"","previous_headings":"Usage","what":"Pagination","title":"R Client for the Notion API","text":"See Pagination section Notion API documentation supported endpoints implementation details. Pagination parameters (page_size start_cursor) exposed function arguments. example, see BlocksChildrenEndpoint retrieve() method.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksChildrenEndpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class for Blocks children endpoint — BlocksChildrenEndpoint","title":"R6 Class for Blocks children endpoint — BlocksChildrenEndpoint","text":"Handle block children operations Notion API Note: Access endpoint client instance, e.g., notion$blocks$children. instantiated directly.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksChildrenEndpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R6 Class for Blocks children endpoint — BlocksChildrenEndpoint","text":"list containing parsed API response.","code":""},{"path":[]},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksChildrenEndpoint.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class for Blocks children endpoint — BlocksChildrenEndpoint","text":"BlocksChildrenEndpoint$new() BlocksChildrenEndpoint$retrieve() BlocksChildrenEndpoint$append()","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksChildrenEndpoint.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class for Blocks children endpoint — BlocksChildrenEndpoint","text":"Initialise block children endpoint. called directly, e.g., use notion$pages$children instead.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksChildrenEndpoint.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Blocks children endpoint — BlocksChildrenEndpoint","text":"","code":"BlocksChildrenEndpoint$new(client)"},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksChildrenEndpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Blocks children endpoint — BlocksChildrenEndpoint","text":"client Notion Client instance","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksChildrenEndpoint.html","id":"method-retrieve-","dir":"Reference","previous_headings":"","what":"Method retrieve()","title":"R6 Class for Blocks children endpoint — BlocksChildrenEndpoint","text":"Retrieve block's children","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksChildrenEndpoint.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Blocks children endpoint — BlocksChildrenEndpoint","text":"","code":"BlocksChildrenEndpoint$retrieve(block_id, start_cursor = NULL, page_size = 100)"},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksChildrenEndpoint.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Blocks children endpoint — BlocksChildrenEndpoint","text":"block_id String (required). ID Notion block. start_cursor Character. pagination. provided, returns results starting cursor. NULL, returns first page results. page_size Integer. Number items return per page (1-100). Defaults 100.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksChildrenEndpoint.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class for Blocks children endpoint — BlocksChildrenEndpoint","text":"Endpoint documentation","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksChildrenEndpoint.html","id":"method-append-","dir":"Reference","previous_headings":"","what":"Method append()","title":"R6 Class for Blocks children endpoint — BlocksChildrenEndpoint","text":"Append block children","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksChildrenEndpoint.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Blocks children endpoint — BlocksChildrenEndpoint","text":"","code":"BlocksChildrenEndpoint$append(block_id, children, after = NULL)"},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksChildrenEndpoint.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Blocks children endpoint — BlocksChildrenEndpoint","text":"block_id String (required). ID Notion block. children List lists (JSON array) (required). Block objects append children block. Character. ID existing block new children appended.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksChildrenEndpoint.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class for Blocks children endpoint — BlocksChildrenEndpoint","text":"Endpoint documentation","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksChildrenEndpoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Blocks children endpoint — BlocksChildrenEndpoint","text":"","code":"notion <- notion_client()  # ----- append children to a block notion$blocks$children$append(   block_id = \"23933ea0-c1e4-81d6-a6f6-dd5b57ad4aba\",   children = list(     # add a level 2 heading called \"Test Heading\"     list(       object = \"block\",       heading_2 = list(         rich_text = list(list(           text = list(content = \"Test Heading\")         ))       )     )   ) ) #> { #>   \"object\": \"list\", #>   \"results\": [ #>     { #>       \"object\": \"block\", #>       \"id\": \"23933ea0-c1e4-81dc-9f56-f3fa251a757f\", #>       \"parent\": { #>         \"type\": \"page_id\", #>         \"page_id\": \"23933ea0-c1e4-81d6-a6f6-dd5b57ad4aba\" #>       }, #>       \"created_time\": \"2025-07-23T05:00:00.000Z\", #>       \"last_edited_time\": \"2025-07-23T05:00:00.000Z\", #>       \"created_by\": { #>         \"object\": \"user\", #>         \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>       }, #>       \"last_edited_by\": { #>         \"object\": \"user\", #>         \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>       }, #>       \"has_children\": false, #>       \"archived\": false, #>       \"in_trash\": false, #>       \"type\": \"heading_2\", #>       \"heading_2\": { #>         \"rich_text\": [ #>           { #>             \"type\": \"text\", #>             \"text\": { #>               \"content\": \"Test Heading\", #>               \"link\": {} #>             }, #>             \"annotations\": { #>               \"bold\": false, #>               \"italic\": false, #>               \"strikethrough\": false, #>               \"underline\": false, #>               \"code\": false, #>               \"color\": \"default\" #>             }, #>             \"plain_text\": \"Test Heading\", #>             \"href\": {} #>           } #>         ], #>         \"is_toggleable\": false, #>         \"color\": \"default\" #>       } #>     } #>   ], #>   \"next_cursor\": {}, #>   \"has_more\": false, #>   \"type\": \"block\", #>   \"block\": {}, #>   \"request_id\": \"9e6e8dcd-dac3-479f-9d0c-b5ef44b628c9\" #> }   # ----- retrieve children of a block notion$blocks$children$retrieve(\"23933ea0-c1e4-81d6-a6f6-dd5b57ad4aba\") #> { #>   \"object\": \"list\", #>   \"results\": [ #>     { #>       \"object\": \"block\", #>       \"id\": \"23933ea0-c1e4-81dc-9f56-f3fa251a757f\", #>       \"parent\": { #>         \"type\": \"page_id\", #>         \"page_id\": \"23933ea0-c1e4-81d6-a6f6-dd5b57ad4aba\" #>       }, #>       \"created_time\": \"2025-07-23T05:00:00.000Z\", #>       \"last_edited_time\": \"2025-07-23T05:00:00.000Z\", #>       \"created_by\": { #>         \"object\": \"user\", #>         \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>       }, #>       \"last_edited_by\": { #>         \"object\": \"user\", #>         \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>       }, #>       \"has_children\": false, #>       \"archived\": false, #>       \"in_trash\": false, #>       \"type\": \"heading_2\", #>       \"heading_2\": { #>         \"rich_text\": [ #>           { #>             \"type\": \"text\", #>             \"text\": { #>               \"content\": \"Test Heading\", #>               \"link\": {} #>             }, #>             \"annotations\": { #>               \"bold\": false, #>               \"italic\": false, #>               \"strikethrough\": false, #>               \"underline\": false, #>               \"code\": false, #>               \"color\": \"default\" #>             }, #>             \"plain_text\": \"Test Heading\", #>             \"href\": {} #>           } #>         ], #>         \"is_toggleable\": false, #>         \"color\": \"default\" #>       } #>     } #>   ], #>   \"next_cursor\": {}, #>   \"has_more\": false, #>   \"type\": \"block\", #>   \"block\": {}, #>   \"request_id\": \"c6a86d45-a6ea-4d08-87e5-6c47192c3495\" #> }   # ----- iterate through paginated results if (FALSE) { # \\dontrun{ start_cursor <- NULL has_more <- TRUE resps <- list() i <- 1  while (has_more) {   resps[[i]] <- notion$blocks$children$retrieve(     \"2926b407e3c44b49a1830609abe6744f\",     start_cursor   )   has_more <- resps[[i]][[\"has_more\"]]   start_cursor <- resps[[i]][[\"next_cursor\"]]   i <- i + 1 } } # }"},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksEndpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class for Blocks Endpoint — BlocksEndpoint","title":"R6 Class for Blocks Endpoint — BlocksEndpoint","text":"Handle block operations Notion API Note: Access endpoint client instance, e.g., notion$blocks. instantiated directly.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksEndpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R6 Class for Blocks Endpoint — BlocksEndpoint","text":"list containing parsed API response.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksEndpoint.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class for Blocks Endpoint — BlocksEndpoint","text":"children Block children endpoint","code":""},{"path":[]},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksEndpoint.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class for Blocks Endpoint — BlocksEndpoint","text":"BlocksEndpoint$new() BlocksEndpoint$retrieve() BlocksEndpoint$update() BlocksEndpoint$delete()","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksEndpoint.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class for Blocks Endpoint — BlocksEndpoint","text":"Initialise block endpoint. called directly, e.g., use notion$blocks instead.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksEndpoint.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Blocks Endpoint — BlocksEndpoint","text":"","code":"BlocksEndpoint$new(client)"},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksEndpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Blocks Endpoint — BlocksEndpoint","text":"client Notion Client instance","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksEndpoint.html","id":"method-retrieve-","dir":"Reference","previous_headings":"","what":"Method retrieve()","title":"R6 Class for Blocks Endpoint — BlocksEndpoint","text":"Retrieve block","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksEndpoint.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Blocks Endpoint — BlocksEndpoint","text":"","code":"BlocksEndpoint$retrieve(block_id)"},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksEndpoint.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Blocks Endpoint — BlocksEndpoint","text":"block_id Character (required). ID Notion block.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksEndpoint.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class for Blocks Endpoint — BlocksEndpoint","text":"Endpoint documentation","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksEndpoint.html","id":"method-update-","dir":"Reference","previous_headings":"","what":"Method update()","title":"R6 Class for Blocks Endpoint — BlocksEndpoint","text":"Update block","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksEndpoint.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Blocks Endpoint — BlocksEndpoint","text":"","code":"BlocksEndpoint$update(block_id, archived = FALSE, ...)"},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksEndpoint.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Blocks Endpoint — BlocksEndpoint","text":"block_id Character (required). ID Notion block. archived Boolean. Set TRUE archive (delete) block. Set FALSE unarchive (restore) block. Defaults FALSE. ... <dynamic-dots> Block-specific properties update. argument named block type (e.g., heading_1, paragraph) named list value containing block configuration.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksEndpoint.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class for Blocks Endpoint — BlocksEndpoint","text":"Endpoint documentation","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksEndpoint.html","id":"method-delete-","dir":"Reference","previous_headings":"","what":"Method delete()","title":"R6 Class for Blocks Endpoint — BlocksEndpoint","text":"Delete block","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksEndpoint.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Blocks Endpoint — BlocksEndpoint","text":"","code":"BlocksEndpoint$delete(block_id)"},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksEndpoint.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Blocks Endpoint — BlocksEndpoint","text":"block_id Character (required). ID Notion block.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksEndpoint.html","id":"details-2","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class for Blocks Endpoint — BlocksEndpoint","text":"Endpoint documentation","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/BlocksEndpoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Blocks Endpoint — BlocksEndpoint","text":"","code":"notion <- notion_client()  # ----- retrieve a block notion$blocks$retrieve(\"23933ea0-c1e4-81dc-9f56-f3fa251a757f\") #> { #>   \"object\": \"block\", #>   \"id\": \"23933ea0-c1e4-81dc-9f56-f3fa251a757f\", #>   \"parent\": { #>     \"type\": \"page_id\", #>     \"page_id\": \"23933ea0-c1e4-81d6-a6f6-dd5b57ad4aba\" #>   }, #>   \"created_time\": \"2025-07-23T05:00:00.000Z\", #>   \"last_edited_time\": \"2025-07-23T05:00:00.000Z\", #>   \"created_by\": { #>     \"object\": \"user\", #>     \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>   }, #>   \"last_edited_by\": { #>     \"object\": \"user\", #>     \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>   }, #>   \"has_children\": false, #>   \"archived\": false, #>   \"in_trash\": false, #>   \"type\": \"heading_2\", #>   \"heading_2\": { #>     \"rich_text\": [ #>       { #>         \"type\": \"text\", #>         \"text\": { #>           \"content\": \"Test Heading\", #>           \"link\": {} #>         }, #>         \"annotations\": { #>           \"bold\": false, #>           \"italic\": false, #>           \"strikethrough\": false, #>           \"underline\": false, #>           \"code\": false, #>           \"color\": \"default\" #>         }, #>         \"plain_text\": \"Test Heading\", #>         \"href\": {} #>       } #>     ], #>     \"is_toggleable\": false, #>     \"color\": \"default\" #>   }, #>   \"request_id\": \"96790a47-fce1-4aac-ad55-b9d41d6cedd0\" #> }   # ----- update a block notion$blocks$update(   \"23933ea0-c1e4-81dc-9f56-f3fa251a757f\",   heading_2 = list(     rich_text = list(       list(         text = list(           content = \"Updated Test Heading\"         )       )     )   ) ) #> { #>   \"object\": \"block\", #>   \"id\": \"23933ea0-c1e4-81dc-9f56-f3fa251a757f\", #>   \"parent\": { #>     \"type\": \"page_id\", #>     \"page_id\": \"23933ea0-c1e4-81d6-a6f6-dd5b57ad4aba\" #>   }, #>   \"created_time\": \"2025-07-23T05:00:00.000Z\", #>   \"last_edited_time\": \"2025-07-23T05:00:00.000Z\", #>   \"created_by\": { #>     \"object\": \"user\", #>     \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>   }, #>   \"last_edited_by\": { #>     \"object\": \"user\", #>     \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>   }, #>   \"has_children\": false, #>   \"archived\": false, #>   \"in_trash\": false, #>   \"type\": \"heading_2\", #>   \"heading_2\": { #>     \"rich_text\": [ #>       { #>         \"type\": \"text\", #>         \"text\": { #>           \"content\": \"Updated Test Heading\", #>           \"link\": {} #>         }, #>         \"annotations\": { #>           \"bold\": false, #>           \"italic\": false, #>           \"strikethrough\": false, #>           \"underline\": false, #>           \"code\": false, #>           \"color\": \"default\" #>         }, #>         \"plain_text\": \"Updated Test Heading\", #>         \"href\": {} #>       } #>     ], #>     \"is_toggleable\": false, #>     \"color\": \"default\" #>   }, #>   \"request_id\": \"648d96cd-0c96-455e-b2e1-7a35eb889dd4\" #> }   # ----- delete a block notion$blocks$delete(block_id = \"23933ea0-c1e4-81d6-a6f6-dd5b57ad4aba\") #> { #>   \"object\": \"block\", #>   \"id\": \"23933ea0-c1e4-81d6-a6f6-dd5b57ad4aba\", #>   \"parent\": { #>     \"type\": \"page_id\", #>     \"page_id\": \"22f33ea0-c1e4-80b9-9c77-d1ab72aedff9\" #>   }, #>   \"created_time\": \"2025-07-23T05:00:00.000Z\", #>   \"last_edited_time\": \"2025-07-23T05:01:00.000Z\", #>   \"created_by\": { #>     \"object\": \"user\", #>     \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>   }, #>   \"last_edited_by\": { #>     \"object\": \"user\", #>     \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>   }, #>   \"has_children\": true, #>   \"archived\": true, #>   \"in_trash\": true, #>   \"type\": \"child_page\", #>   \"child_page\": { #>     \"title\": \"Test Page for notionapi\" #>   }, #>   \"request_id\": \"3371d06e-15fc-4e7c-b238-baea10ee7926\" #> }"},{"path":"https://brenwin1.github.io/notionapi/reference/CommentsEndpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class for Comments Endpoint — CommentsEndpoint","title":"R6 Class for Comments Endpoint — CommentsEndpoint","text":"Handle comments operations Notion API Note: Access endpoint client instance, e.g., notion$comments. instantiated directly.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/CommentsEndpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R6 Class for Comments Endpoint — CommentsEndpoint","text":"list containing parsed API response.","code":""},{"path":[]},{"path":"https://brenwin1.github.io/notionapi/reference/CommentsEndpoint.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class for Comments Endpoint — CommentsEndpoint","text":"CommentsEndpoint$new() CommentsEndpoint$create() CommentsEndpoint$retrieve()","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/CommentsEndpoint.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class for Comments Endpoint — CommentsEndpoint","text":"Initialise comments endpoint. called directly, e.g., use notion$comments instead.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/CommentsEndpoint.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Comments Endpoint — CommentsEndpoint","text":"","code":"CommentsEndpoint$new(client)"},{"path":"https://brenwin1.github.io/notionapi/reference/CommentsEndpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Comments Endpoint — CommentsEndpoint","text":"client Notion Client instance","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/CommentsEndpoint.html","id":"method-create-","dir":"Reference","previous_headings":"","what":"Method create()","title":"R6 Class for Comments Endpoint — CommentsEndpoint","text":"Create comment","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/CommentsEndpoint.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Comments Endpoint — CommentsEndpoint","text":"","code":"CommentsEndpoint$create(   parent = NULL,   discussion_id = NULL,   rich_text,   attachments = NULL,   display_name = NULL )"},{"path":"https://brenwin1.github.io/notionapi/reference/CommentsEndpoint.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Comments Endpoint — CommentsEndpoint","text":"parent List (JSON object). parent page comment created. Required discussion_id provided discussion_id Character. ID discussion thread comment. Required parent provided. rich_text List lists (JSON array) (required). Rich text object(s) representing comment content. attachments List lists (JSON array). Attachments include comment. display_name Named list (JSON object). Custom display name comment.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/CommentsEndpoint.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class for Comments Endpoint — CommentsEndpoint","text":"Endpoint documentation","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/CommentsEndpoint.html","id":"method-retrieve-","dir":"Reference","previous_headings":"","what":"Method retrieve()","title":"R6 Class for Comments Endpoint — CommentsEndpoint","text":"Retrieve comments block","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/CommentsEndpoint.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Comments Endpoint — CommentsEndpoint","text":"","code":"CommentsEndpoint$retrieve(block_id, start_cursor = NULL, page_size = NULL)"},{"path":"https://brenwin1.github.io/notionapi/reference/CommentsEndpoint.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Comments Endpoint — CommentsEndpoint","text":"block_id Character. ID Notion block. start_cursor Character. pagination. provided, returns results starting cursor. NULL, returns first page results. page_size Integer. Number items return per page (1-100). Defaults 100.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/CommentsEndpoint.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class for Comments Endpoint — CommentsEndpoint","text":"Endpoint documentation","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/CommentsEndpoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Comments Endpoint — CommentsEndpoint","text":"","code":"notion <- notion_client()  # ----- create comment notion$comments$create(   list(page_id = \"23933ea0-c1e4-81d6-a6f6-dd5b57ad4aba\"),   rich_text = list(list(     text = list(       content = \"Hello world\"     )   )) ) #> { #>   \"object\": \"comment\", #>   \"id\": \"23933ea0-c1e4-8180-a10e-001d4fcf0d39\", #>   \"parent\": { #>     \"type\": \"page_id\", #>     \"page_id\": \"23933ea0-c1e4-81d6-a6f6-dd5b57ad4aba\" #>   }, #>   \"discussion_id\": \"23933ea0-c1e4-81ea-a476-001c4f062db0\", #>   \"created_time\": \"2025-07-23T05:01:00.000Z\", #>   \"last_edited_time\": \"2025-07-23T05:01:00.000Z\", #>   \"created_by\": { #>     \"object\": \"user\", #>     \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>   }, #>   \"rich_text\": [ #>     { #>       \"type\": \"text\", #>       \"text\": { #>         \"content\": \"Hello world\", #>         \"link\": {} #>       }, #>       \"annotations\": { #>         \"bold\": false, #>         \"italic\": false, #>         \"strikethrough\": false, #>         \"underline\": false, #>         \"code\": false, #>         \"color\": \"default\" #>       }, #>       \"plain_text\": \"Hello world\", #>       \"href\": {} #>     } #>   ], #>   \"display_name\": { #>     \"type\": \"integration\", #>     \"resolved_name\": \"brenwin-internal\" #>   }, #>   \"request_id\": \"adbd7b2a-2d2a-4165-8269-4f00cea711ba\" #> }   # ----- retrieve comments notion$comments$retrieve(block_id = \"23933ea0-c1e4-81d6-a6f6-dd5b57ad4aba\") #> { #>   \"object\": \"list\", #>   \"results\": [ #>     { #>       \"object\": \"comment\", #>       \"id\": \"23933ea0-c1e4-8180-a10e-001d4fcf0d39\", #>       \"parent\": { #>         \"type\": \"page_id\", #>         \"page_id\": \"23933ea0-c1e4-81d6-a6f6-dd5b57ad4aba\" #>       }, #>       \"discussion_id\": \"23933ea0-c1e4-81ea-a476-001c4f062db0\", #>       \"created_time\": \"2025-07-23T05:01:00.000Z\", #>       \"last_edited_time\": \"2025-07-23T05:01:00.000Z\", #>       \"created_by\": { #>         \"object\": \"user\", #>         \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>       }, #>       \"rich_text\": [ #>         { #>           \"type\": \"text\", #>           \"text\": { #>             \"content\": \"Hello world\", #>             \"link\": {} #>           }, #>           \"annotations\": { #>             \"bold\": false, #>             \"italic\": false, #>             \"strikethrough\": false, #>             \"underline\": false, #>             \"code\": false, #>             \"color\": \"default\" #>           }, #>           \"plain_text\": \"Hello world\", #>           \"href\": {} #>         } #>       ], #>       \"display_name\": { #>         \"type\": \"integration\", #>         \"resolved_name\": \"brenwin-internal\" #>       } #>     } #>   ], #>   \"next_cursor\": {}, #>   \"has_more\": false, #>   \"type\": \"comment\", #>   \"comment\": {}, #>   \"request_id\": \"b1a5dbcc-d2b8-405b-82c3-16f6df2c3cdf\" #> }"},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class for Databases Endpoint — DatabasesEndpoint","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"Handle databases operations Notion API Note: Access endpoint client instance, e.g., notion$databases. instantiated directly.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"list containing parsed API response.","code":""},{"path":[]},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"DatabasesEndpoint$new() DatabasesEndpoint$create() DatabasesEndpoint$query() DatabasesEndpoint$retrieve() DatabasesEndpoint$update()","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"Initialise databases endpoint. called directly, e.g., use notion$databases instead.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"","code":"DatabasesEndpoint$new(client)"},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"client Notion Client instance","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"method-create-","dir":"Reference","previous_headings":"","what":"Method create()","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"Create database","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"","code":"DatabasesEndpoint$create(parent, title, properties, ...)"},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"parent Named list (JSON object) (required). parent page database created. title List lists (JSON array). Database title array rich text objects. properties Named list (JSON object) (required). properties database key-value pairs. ... <dynamic-dots> Additional body parameters include request body.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"Endpoint documentation","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"method-query-","dir":"Reference","previous_headings":"","what":"Method query()","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"Query database","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"","code":"DatabasesEndpoint$query(   database_id,   filter_properties = NULL,   filter = NULL,   sorts = NULL,   start_cursor = NULL,   page_size = 100,   ... )"},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"database_id String (required). ID Notion database. filter_properties Character vector. Property value IDs include response schema. filter Named list (JSON object). Filter conditions apply query. sorts List lists (JSON array). Sort conditions apply query. start_cursor Character. pagination. provided, returns results starting cursor. NULL, returns first page results. page_size Integer. Number items return per page (1-100). Defaults 100. ... Reserved future use.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"Endpoint documentation","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"method-retrieve-","dir":"Reference","previous_headings":"","what":"Method retrieve()","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"Retrieve database","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"","code":"DatabasesEndpoint$retrieve(database_id)"},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"database_id String (required). ID Notion database.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"details-2","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"Endpoint documentation","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"method-update-","dir":"Reference","previous_headings":"","what":"Method update()","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"Update database","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"","code":"DatabasesEndpoint$update(   database_id,   title = NULL,   description = NULL,   properties = NULL )"},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"database_id String (required). ID Notion database. title List lists (JSON array). Database title array rich text objects. description List lists (JSON array). Database description array rich text objects. properties Named list (JSON object). Database properties update key-value pairs.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"details-3","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"Endpoint documentation","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/DatabasesEndpoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Databases Endpoint — DatabasesEndpoint","text":"","code":"notion <- notion_client()  # ----- create a database notion$databases$create(   parent = list(page_id = \"23933ea0-c1e4-81d6-a6f6-dd5b57ad4aba\"),   title = list(     list(       type = \"text\",       text = list(         content = \"Grocery list\"       )     )   ),   properties = list(     Name = list(       title = no_config()     ),     `In stock` = list(       checkbox = no_config()     )   ) ) #> { #>   \"object\": \"database\", #>   \"id\": \"23933ea0-c1e4-8136-b37b-fa235c6f2a71\", #>   \"cover\": {}, #>   \"icon\": {}, #>   \"created_time\": \"2025-07-23T05:01:00.000Z\", #>   \"created_by\": { #>     \"object\": \"user\", #>     \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>   }, #>   \"last_edited_by\": { #>     \"object\": \"user\", #>     \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>   }, #>   \"last_edited_time\": \"2025-07-23T05:01:00.000Z\", #>   \"title\": [ #>     { #>       \"type\": \"text\", #>       \"text\": { #>         \"content\": \"Grocery list\", #>         \"link\": {} #>       }, #>       \"annotations\": { #>         \"bold\": false, #>         \"italic\": false, #>         \"strikethrough\": false, #>         \"underline\": false, #>         \"code\": false, #>         \"color\": \"default\" #>       }, #>       \"plain_text\": \"Grocery list\", #>       \"href\": {} #>     } #>   ], #>   \"description\": [], #>   \"is_inline\": false, #>   \"properties\": { #>     \"In stock\": { #>       \"id\": \"q%3BL%5E\", #>       \"name\": \"In stock\", #>       \"type\": \"checkbox\", #>       \"checkbox\": {} #>     }, #>     \"Name\": { #>       \"id\": \"title\", #>       \"name\": \"Name\", #>       \"type\": \"title\", #>       \"title\": {} #>     } #>   }, #>   \"parent\": { #>     \"type\": \"page_id\", #>     \"page_id\": \"23933ea0-c1e4-81d6-a6f6-dd5b57ad4aba\" #>   }, #>   \"url\": \"https://www.notion.so/23933ea0c1e48136b37bfa235c6f2a71\", #>   \"public_url\": {}, #>   \"archived\": false, #>   \"in_trash\": false, #>   \"request_id\": \"c3a4224b-5923-46c2-9497-c5527eb10b92\" #> }   # ----- retrieve a database notion$databases$retrieve(   \"23933ea0-c1e4-8136-b37b-fa235c6f2a71\" ) #> { #>   \"object\": \"database\", #>   \"id\": \"23933ea0-c1e4-8136-b37b-fa235c6f2a71\", #>   \"cover\": {}, #>   \"icon\": {}, #>   \"created_time\": \"2025-07-23T05:01:00.000Z\", #>   \"created_by\": { #>     \"object\": \"user\", #>     \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>   }, #>   \"last_edited_by\": { #>     \"object\": \"user\", #>     \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>   }, #>   \"last_edited_time\": \"2025-07-23T05:01:00.000Z\", #>   \"title\": [ #>     { #>       \"type\": \"text\", #>       \"text\": { #>         \"content\": \"Grocery list\", #>         \"link\": {} #>       }, #>       \"annotations\": { #>         \"bold\": false, #>         \"italic\": false, #>         \"strikethrough\": false, #>         \"underline\": false, #>         \"code\": false, #>         \"color\": \"default\" #>       }, #>       \"plain_text\": \"Grocery list\", #>       \"href\": {} #>     } #>   ], #>   \"description\": [], #>   \"is_inline\": false, #>   \"properties\": { #>     \"In stock\": { #>       \"id\": \"q%3BL%5E\", #>       \"name\": \"In stock\", #>       \"type\": \"checkbox\", #>       \"checkbox\": {} #>     }, #>     \"Name\": { #>       \"id\": \"title\", #>       \"name\": \"Name\", #>       \"type\": \"title\", #>       \"title\": {} #>     } #>   }, #>   \"parent\": { #>     \"type\": \"page_id\", #>     \"page_id\": \"23933ea0-c1e4-81d6-a6f6-dd5b57ad4aba\" #>   }, #>   \"url\": \"https://www.notion.so/23933ea0c1e48136b37bfa235c6f2a71\", #>   \"public_url\": {}, #>   \"archived\": false, #>   \"in_trash\": false, #>   \"request_id\": \"f585fdc8-9acd-4ac1-a99f-26a882aea654\" #> }   # ----- update a database notion$databases$update(   \"23933ea0-c1e4-8136-b37b-fa235c6f2a71\",   list(list(     text = list(       content = \"Today's grocery list\"     )   )) ) #> { #>   \"object\": \"database\", #>   \"id\": \"23933ea0-c1e4-8136-b37b-fa235c6f2a71\", #>   \"cover\": {}, #>   \"icon\": {}, #>   \"created_time\": \"2025-07-23T05:01:00.000Z\", #>   \"created_by\": { #>     \"object\": \"user\", #>     \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>   }, #>   \"last_edited_by\": { #>     \"object\": \"user\", #>     \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>   }, #>   \"last_edited_time\": \"2025-07-23T05:01:00.000Z\", #>   \"title\": [ #>     { #>       \"type\": \"text\", #>       \"text\": { #>         \"content\": \"Today's grocery list\", #>         \"link\": {} #>       }, #>       \"annotations\": { #>         \"bold\": false, #>         \"italic\": false, #>         \"strikethrough\": false, #>         \"underline\": false, #>         \"code\": false, #>         \"color\": \"default\" #>       }, #>       \"plain_text\": \"Today's grocery list\", #>       \"href\": {} #>     } #>   ], #>   \"description\": [], #>   \"is_inline\": false, #>   \"properties\": { #>     \"In stock\": { #>       \"id\": \"q%3BL%5E\", #>       \"name\": \"In stock\", #>       \"type\": \"checkbox\", #>       \"checkbox\": {} #>     }, #>     \"Name\": { #>       \"id\": \"title\", #>       \"name\": \"Name\", #>       \"type\": \"title\", #>       \"title\": {} #>     } #>   }, #>   \"parent\": { #>     \"type\": \"page_id\", #>     \"page_id\": \"23933ea0-c1e4-81d6-a6f6-dd5b57ad4aba\" #>   }, #>   \"url\": \"https://www.notion.so/23933ea0c1e48136b37bfa235c6f2a71\", #>   \"public_url\": {}, #>   \"archived\": false, #>   \"in_trash\": false, #>   \"request_id\": \"68c8b897-f3c1-4cde-a9f3-db92c20ebbb8\" #> }   # ----- query a database notion$databases$query(   database_id = \"23933ea0-c1e4-8136-b37b-fa235c6f2a71\",   filter = list(     or = list(       list(         property = \"In stock\",         checkbox = list(equals = TRUE)       ),       list(         property = \"Name\",         title = list(contains = \"kale\")       )     )   ),   sorts = list(list(     property = \"Name\",     direction = \"ascending\"   )) ) #> { #>   \"object\": \"list\", #>   \"results\": [ #>     { #>       \"object\": \"page\", #>       \"id\": \"23933ea0-c1e4-8104-897b-f5a09269e561\", #>       \"created_time\": \"2025-07-23T05:01:00.000Z\", #>       \"last_edited_time\": \"2025-07-23T05:01:00.000Z\", #>       \"created_by\": { #>         \"object\": \"user\", #>         \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>       }, #>       \"last_edited_by\": { #>         \"object\": \"user\", #>         \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>       }, #>       \"cover\": {}, #>       \"icon\": {}, #>       \"parent\": { #>         \"type\": \"database_id\", #>         \"database_id\": \"23933ea0-c1e4-8136-b37b-fa235c6f2a71\" #>       }, #>       \"archived\": false, #>       \"in_trash\": false, #>       \"properties\": { #>         \"In stock\": { #>           \"id\": \"q%3BL%5E\", #>           \"type\": \"checkbox\", #>           \"checkbox\": true #>         }, #>         \"Name\": { #>           \"id\": \"title\", #>           \"type\": \"title\", #>           \"title\": [ #>             { #>               \"type\": \"text\", #>               \"text\": { #>                 \"content\": \"Tuscan Kale\", #>                 \"link\": {} #>               }, #>               \"annotations\": { #>                 \"bold\": false, #>                 \"italic\": false, #>                 \"strikethrough\": false, #>                 \"underline\": false, #>                 \"code\": false, #>                 \"color\": \"default\" #>               }, #>               \"plain_text\": \"Tuscan Kale\", #>               \"href\": {} #>             } #>           ] #>         } #>       }, #>       \"url\": \"https://www.notion.so/Tuscan-Kale-23933ea0c1e48104897bf5a09269e561\", #>       \"public_url\": {} #>     } #>   ], #>   \"next_cursor\": {}, #>   \"has_more\": false, #>   \"type\": \"page_or_database\", #>   \"page_or_database\": {}, #>   \"request_id\": \"7dde87ad-4cbf-4189-8b05-795e9609cc99\" #> }   # ----- iterate through paginated results if (FALSE) { # \\dontrun{ i <- 1 resps <- list() has_more <- FALSE start_cursor <- NULL  while (has_more) {   resps[[i]] <- notion$databases$query(     \"22833ea0c1e481178e9cf1dcba79dbca\",     start_cursor = start_cursor   )    has_more <- resps[[i]][[\"has_more\"]]   start_cursor <- resps[[i]][[\"next_cursor\"]]   i <- i + 1 } } # }"},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":null,"dir":"Reference","previous_headings":"","what":"Notion API client — notion_client","title":"Notion API client — notion_client","text":"Main client interacting Notion API. R6 class provides access Notion API endpoints organised sub-objects.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"client-types","dir":"Reference","previous_headings":"","what":"Client Types","title":"Notion API client — notion_client","text":"notion_client(): Create synchronous client (blocks requests complete) async_notion_client(): Create asynchronous client (non-blocking) clients provide identical interfaces, async client inheriting methods synchronous client. difference async methods return promises instead results directly.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Notion API client — notion_client","text":"","code":"notion_client(   auth = NULL,   base_url = getOption(\"notionapi.base_url\"),   version = getOption(\"notionapi.version\"),   timeout = 60000 )  async_notion_client(   auth = NULL,   base_url = getOption(\"notionapi.base_url\"),   version = getOption(\"notionapi.version\"),   timeout = 60000 )"},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"configuration-fields","dir":"Reference","previous_headings":"","what":"Configuration fields","title":"Notion API client — notion_client","text":"auth: Authentication token. Defaults NOTION_TOKEN environment variable base_url: Base URL Notion API (defaults getOption(\"notionapi.base_url\")) version: Notion API version (defaults getOption(\"notionapi.version\")) timeout: Timeout requests milliseconds (defaults 60000, 60 seconds)","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"endpoints","dir":"Reference","previous_headings":"","what":"Endpoints","title":"Notion API client — notion_client","text":"blocks: Blocks endpoint object (BlocksEndpoint) blocks$children: Blocks children endpoint object (BlocksChildrenEndpoint) pages: Pages endpoint object (PagesEndpoint) pages$properties: Pages properties endpoint object (PagesPropertiesEndpoint) databases: Databases endpoint object (DatabasesEndpoint) comments: Comments endpoint object (CommentsEndpoint) search: Search endpoint (see NotionClient$search() method ) users: Users endpoint object (UsersEndpoint)","code":""},{"path":[]},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Notion API client — notion_client","text":"base_url Base URL Notion API version Notion API version blocks Blocks endpoint object pages Pages endpoint object databases Databases endpoint object comments Comments endpoint object users Users endpoint object","code":""},{"path":[]},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Notion API client — notion_client","text":"NotionClient$new() NotionClient$request() NotionClient$print() NotionClient$search()","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Notion API client — notion_client","text":"Initialise Notion Client","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Notion API client — notion_client","text":"","code":"NotionClient$new(   auth = NULL,   base_url = \"https://api.notion.com/v1/\",   version = getOption(\"notionapi.version\"),   timeout = 60000 )"},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Notion API client — notion_client","text":"auth Authentication token. Uses NOTION_TOKEN environment variable default. base_url Character. Base URL Notion API. version Character. Notion API version. timeout Numeric. Number milliseconds wait timing request.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"method-request-","dir":"Reference","previous_headings":"","what":"Method request()","title":"Notion API client — notion_client","text":"Create base httr2 request object Notion API. method primarily advanced users want make custom API calls debugging purposes. users use endpoint methods instead.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Notion API client — notion_client","text":"","code":"NotionClient$request()"},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Notion API client — notion_client","text":"httr2 request object","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Notion API client — notion_client","text":"Print basic details Notion Client","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Notion API client — notion_client","text":"","code":"NotionClient$print()"},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"method-search-","dir":"Reference","previous_headings":"","what":"Method search()","title":"Notion API client — notion_client","text":"Search parent child pages databases shared integration","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Notion API client — notion_client","text":"","code":"NotionClient$search(   query = NULL,   sort = NULL,   filter = NULL,   start_cursor = NULL,   page_size = NULL )"},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Notion API client — notion_client","text":"query Character. search query string. sort Named list (JSON object). Sort condition apply search results. filter List (JSON object). Filter condition apply search results. start_cursor Character. pagination. provided, returns results starting cursor. NULL, returns first page results. page_size Integer. Number items return per page (1-100). Defaults 100.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Notion API client — notion_client","text":"notionapi::NotionClient -> AsyncNotionClient","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"methods-1","dir":"Reference","previous_headings":"","what":"Methods","title":"Notion API client — notion_client","text":"notionapi::NotionClient$search()","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"public-methods-1","dir":"Reference","previous_headings":"","what":"Public methods","title":"Notion API client — notion_client","text":"AsyncNotionClient$new() AsyncNotionClient$request() AsyncNotionClient$print()","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"method-new--1","dir":"Reference","previous_headings":"","what":"Method new()","title":"Notion API client — notion_client","text":"Initialise Async Notion Client","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Notion API client — notion_client","text":"","code":"AsyncNotionClient$new(   auth = NULL,   base_url = \"https://api.notion.com/v1/\",   version = getOption(\"notionapi.version\"),   timeout = 60000 )"},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Notion API client — notion_client","text":"auth Authentication token. Uses NOTION_TOKEN environment variable default. base_url Character. Base URL Notion API. version Character. Notion API version. timeout Numeric. Number milliseconds wait timing request.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"method-request--1","dir":"Reference","previous_headings":"","what":"Method request()","title":"Notion API client — notion_client","text":"Create base httr2 request object Notion API. method primarily advanced users want make custom API calls debugging purposes. users use endpoint methods instead.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Notion API client — notion_client","text":"","code":"AsyncNotionClient$request()"},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Notion API client — notion_client","text":"httr2 request object","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"method-print--1","dir":"Reference","previous_headings":"","what":"Method print()","title":"Notion API client — notion_client","text":"Print basic details Notion Client","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Notion API client — notion_client","text":"","code":"AsyncNotionClient$print()"},{"path":"https://brenwin1.github.io/notionapi/reference/NotionClient.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Notion API client — notion_client","text":"","code":"# ----- Create a Notion client with default configuration notion <- notion_client()  # search for pages and databases notion$search(   \"Test Page 2025-07-15\",   page_size = 1,   filter = list(     value = \"page\",     property = \"object\"   ),   sort = list(     direction = \"descending\",     timestamp = \"last_edited_time\"   ) ) #> { #>   \"object\": \"list\", #>   \"results\": [ #>     { #>       \"object\": \"page\", #>       \"id\": \"22f33ea0-c1e4-80b9-9c77-d1ab72aedff9\", #>       \"created_time\": \"2025-07-13T12:29:00.000Z\", #>       \"last_edited_time\": \"2025-07-23T05:00:00.000Z\", #>       \"created_by\": { #>         \"object\": \"user\", #>         \"id\": \"fda12729-108d-4eb5-bbfb-a8f0886794d1\" #>       }, #>       \"last_edited_by\": { #>         \"object\": \"user\", #>         \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>       }, #>       \"cover\": {}, #>       \"icon\": { #>         \"type\": \"emoji\", #>         \"emoji\": \"#️⃣\" #>       }, #>       \"parent\": { #>         \"type\": \"block_id\", #>         \"block_id\": \"21e33ea0-c1e4-8014-963b-cc5ecf889b84\" #>       }, #>       \"archived\": false, #>       \"in_trash\": false, #>       \"properties\": { #>         \"title\": { #>           \"id\": \"title\", #>           \"type\": \"title\", #>           \"title\": [ #>             { #>               \"type\": \"text\", #>               \"text\": { #>                 \"content\": \"Test Page Parent\", #>                 \"link\": {} #>               }, #>               \"annotations\": { #>                 \"bold\": false, #>                 \"italic\": false, #>                 \"strikethrough\": false, #>                 \"underline\": false, #>                 \"code\": false, #>                 \"color\": \"default\" #>               }, #>               \"plain_text\": \"Test Page Parent\", #>               \"href\": {} #>             } #>           ] #>         } #>       }, #>       \"url\": \"https://www.notion.so/Test-Page-Parent-22f33ea0c1e480b99c77d1ab72aedff9\", #>       \"public_url\": {} #>     } #>   ], #>   \"next_cursor\": \"47d65dc1-baca-4120-a969-9678e7302f99\", #>   \"has_more\": true, #>   \"type\": \"page_or_database\", #>   \"page_or_database\": {}, #>   \"request_id\": \"9f78f94e-8e09-4b47-b652-f25b8afc34b3\" #> }   # ----- Async client if (FALSE) { # \\dontrun{ library(promises) async_notion <- async_notion_client()  # Start multiple requests simultaneously (non-blocking) p1 <- async_notion$search(   query = \"Testing\",   page_size = 1 )  p2 <- async_notion$users$me()  # Returns a promise object, not particularly useful on its own p1 p2  # Use promise chaining functions to process results as they complete p1 %...>%   print()  p2 %...>%   print()  # See the [promises package documentation](https://rstudio.github.io/promises/) # for more information on working with promises } # }"},{"path":"https://brenwin1.github.io/notionapi/reference/PagesEndpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class for Pages Endpoint — PagesEndpoint","title":"R6 Class for Pages Endpoint — PagesEndpoint","text":"Handle pages operations Notion API Note: Access endpoint client instance, e.g., notion$pages. instantiated directly.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/PagesEndpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R6 Class for Pages Endpoint — PagesEndpoint","text":"list containing parsed API response.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/PagesEndpoint.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class for Pages Endpoint — PagesEndpoint","text":"properties Pages properties endpoint","code":""},{"path":[]},{"path":"https://brenwin1.github.io/notionapi/reference/PagesEndpoint.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class for Pages Endpoint — PagesEndpoint","text":"PagesEndpoint$new() PagesEndpoint$create() PagesEndpoint$retrieve()","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/PagesEndpoint.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class for Pages Endpoint — PagesEndpoint","text":"Initialise pages endpoint. called directly, e.g., use notion$pages instead.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/PagesEndpoint.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Pages Endpoint — PagesEndpoint","text":"","code":"PagesEndpoint$new(client)"},{"path":"https://brenwin1.github.io/notionapi/reference/PagesEndpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Pages Endpoint — PagesEndpoint","text":"client Notion Client instance","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/PagesEndpoint.html","id":"method-create-","dir":"Reference","previous_headings":"","what":"Method create()","title":"R6 Class for Pages Endpoint — PagesEndpoint","text":"Create page","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/PagesEndpoint.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Pages Endpoint — PagesEndpoint","text":"","code":"PagesEndpoint$create(   parent,   properties,   children = NULL,   icon = NULL,   cover = NULL )"},{"path":"https://brenwin1.github.io/notionapi/reference/PagesEndpoint.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Pages Endpoint — PagesEndpoint","text":"parent Named list (JSON object) (required). parent page database new page inserted. properties Named list (JSON object) (required). Key-value pairs representing properties page. children List lists (JSON array). Block objects append children page. icon Named list (JSON object). icon page. cover Named list (JSON object). cover image page.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/PagesEndpoint.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class for Pages Endpoint — PagesEndpoint","text":"Endpoint documentation","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/PagesEndpoint.html","id":"method-retrieve-","dir":"Reference","previous_headings":"","what":"Method retrieve()","title":"R6 Class for Pages Endpoint — PagesEndpoint","text":"Retrieve page properties","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/PagesEndpoint.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Pages Endpoint — PagesEndpoint","text":"","code":"PagesEndpoint$retrieve(page_id, filter_properties = NULL)"},{"path":"https://brenwin1.github.io/notionapi/reference/PagesEndpoint.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Pages Endpoint — PagesEndpoint","text":"page_id Character (required.). ID Notion page. filter_properties Character. Page property value IDs include response schema. NULL, properties returned.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/PagesEndpoint.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class for Pages Endpoint — PagesEndpoint","text":"Endpoint documentation","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/PagesEndpoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Pages Endpoint — PagesEndpoint","text":"","code":"notion <- notion_client()  # ----- create a page notion$pages$create(   list(page_id = \"22f33ea0c1e480b99c77d1ab72aedff9\"),   list(     title = list(list(       text = list(         content = \"Test Page for notionapi\"       )     ))   ) ) #> { #>   \"object\": \"page\", #>   \"id\": \"23933ea0-c1e4-81d6-a6f6-dd5b57ad4aba\", #>   \"created_time\": \"2025-07-23T05:00:00.000Z\", #>   \"last_edited_time\": \"2025-07-23T05:00:00.000Z\", #>   \"created_by\": { #>     \"object\": \"user\", #>     \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>   }, #>   \"last_edited_by\": { #>     \"object\": \"user\", #>     \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>   }, #>   \"cover\": {}, #>   \"icon\": {}, #>   \"parent\": { #>     \"type\": \"page_id\", #>     \"page_id\": \"22f33ea0-c1e4-80b9-9c77-d1ab72aedff9\" #>   }, #>   \"archived\": false, #>   \"in_trash\": false, #>   \"properties\": { #>     \"title\": { #>       \"id\": \"title\", #>       \"type\": \"title\", #>       \"title\": [ #>         { #>           \"type\": \"text\", #>           \"text\": { #>             \"content\": \"Test Page for notionapi\", #>             \"link\": {} #>           }, #>           \"annotations\": { #>             \"bold\": false, #>             \"italic\": false, #>             \"strikethrough\": false, #>             \"underline\": false, #>             \"code\": false, #>             \"color\": \"default\" #>           }, #>           \"plain_text\": \"Test Page for notionapi\", #>           \"href\": {} #>         } #>       ] #>     } #>   }, #>   \"url\": \"https://www.notion.so/Test-Page-for-notionapi-23933ea0c1e481d6a6f6dd5b57ad4aba\", #>   \"public_url\": {}, #>   \"request_id\": \"a46593d0-18a7-436e-ab7c-b3049b00c8e8\" #> }   # ----- retrieve a page notion$pages$retrieve(\"23933ea0-c1e4-81d6-a6f6-dd5b57ad4aba\") #> { #>   \"object\": \"page\", #>   \"id\": \"23933ea0-c1e4-81d6-a6f6-dd5b57ad4aba\", #>   \"created_time\": \"2025-07-23T05:00:00.000Z\", #>   \"last_edited_time\": \"2025-07-23T05:00:00.000Z\", #>   \"created_by\": { #>     \"object\": \"user\", #>     \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>   }, #>   \"last_edited_by\": { #>     \"object\": \"user\", #>     \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>   }, #>   \"cover\": {}, #>   \"icon\": {}, #>   \"parent\": { #>     \"type\": \"page_id\", #>     \"page_id\": \"22f33ea0-c1e4-80b9-9c77-d1ab72aedff9\" #>   }, #>   \"archived\": false, #>   \"in_trash\": false, #>   \"properties\": { #>     \"title\": { #>       \"id\": \"title\", #>       \"type\": \"title\", #>       \"title\": [ #>         { #>           \"type\": \"text\", #>           \"text\": { #>             \"content\": \"Test Page for notionapi\", #>             \"link\": {} #>           }, #>           \"annotations\": { #>             \"bold\": false, #>             \"italic\": false, #>             \"strikethrough\": false, #>             \"underline\": false, #>             \"code\": false, #>             \"color\": \"default\" #>           }, #>           \"plain_text\": \"Test Page for notionapi\", #>           \"href\": {} #>         } #>       ] #>     } #>   }, #>   \"url\": \"https://www.notion.so/Test-Page-for-notionapi-23933ea0c1e481d6a6f6dd5b57ad4aba\", #>   \"public_url\": {}, #>   \"request_id\": \"b9ea5c65-77df-48fb-b165-5bb2ffffe555\" #> }"},{"path":"https://brenwin1.github.io/notionapi/reference/PagesPropertiesEndpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class for Pages Properties Endpoint — PagesPropertiesEndpoint","title":"R6 Class for Pages Properties Endpoint — PagesPropertiesEndpoint","text":"Handle pages properties operations Notion API Note: Access endpoint client instance, e.g., notion$pages$properties. instantiated directly.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/PagesPropertiesEndpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R6 Class for Pages Properties Endpoint — PagesPropertiesEndpoint","text":"list containing parsed API response.","code":""},{"path":[]},{"path":"https://brenwin1.github.io/notionapi/reference/PagesPropertiesEndpoint.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class for Pages Properties Endpoint — PagesPropertiesEndpoint","text":"PagesPropertiesEndpoint$new() PagesPropertiesEndpoint$retrieve() PagesPropertiesEndpoint$update()","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/PagesPropertiesEndpoint.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class for Pages Properties Endpoint — PagesPropertiesEndpoint","text":"Initialise pages properties endpoint. called directly, e.g., use notion$pages$properties instead.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/PagesPropertiesEndpoint.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Pages Properties Endpoint — PagesPropertiesEndpoint","text":"","code":"PagesPropertiesEndpoint$new(client)"},{"path":"https://brenwin1.github.io/notionapi/reference/PagesPropertiesEndpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Pages Properties Endpoint — PagesPropertiesEndpoint","text":"client Notion Client instance","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/PagesPropertiesEndpoint.html","id":"method-retrieve-","dir":"Reference","previous_headings":"","what":"Method retrieve()","title":"R6 Class for Pages Properties Endpoint — PagesPropertiesEndpoint","text":"Retrieve page property item","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/PagesPropertiesEndpoint.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Pages Properties Endpoint — PagesPropertiesEndpoint","text":"","code":"PagesPropertiesEndpoint$retrieve(   page_id,   property_id,   page_size = 100,   start_cursor = NULL )"},{"path":"https://brenwin1.github.io/notionapi/reference/PagesPropertiesEndpoint.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Pages Properties Endpoint — PagesPropertiesEndpoint","text":"page_id Character (required). ID Notion page. property_id Character (required). ID property retrieve. page_size Integer. Number items return per page (1-100). Defaults 100. start_cursor Character. pagination. provided, returns results starting cursor. NULL, returns first page results.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/PagesPropertiesEndpoint.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class for Pages Properties Endpoint — PagesPropertiesEndpoint","text":"Endpoint documentation","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/PagesPropertiesEndpoint.html","id":"method-update-","dir":"Reference","previous_headings":"","what":"Method update()","title":"R6 Class for Pages Properties Endpoint — PagesPropertiesEndpoint","text":"Update page property","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/PagesPropertiesEndpoint.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Pages Properties Endpoint — PagesPropertiesEndpoint","text":"","code":"PagesPropertiesEndpoint$update(   page_id,   properties = NULL,   in_trash = NULL,   icon = NULL,   cover = NULL )"},{"path":"https://brenwin1.github.io/notionapi/reference/PagesPropertiesEndpoint.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Pages Properties Endpoint — PagesPropertiesEndpoint","text":"page_id Character (required). ID Notion page. properties Named list (JSON object). Page properties update key-value pairs. in_trash Boolean. Set TRUE move block trash (delete). Set FALSE restore block Defaults FALSE. icon Named list (JSON object). icon page. cover Named list (JSON object). cover image page.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/PagesPropertiesEndpoint.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class for Pages Properties Endpoint — PagesPropertiesEndpoint","text":"Endpoint documentation","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/PagesPropertiesEndpoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Pages Properties Endpoint — PagesPropertiesEndpoint","text":"","code":"notion <- notion_client()  # ----- retrieve a page property notion$pages$properties$retrieve(   \"23933ea0-c1e4-8104-897b-f5a09269e561\",   property_id = \"q;L^\" ) #> { #>   \"object\": \"property_item\", #>   \"type\": \"checkbox\", #>   \"id\": \"q%3BL%5E\", #>   \"checkbox\": true, #>   \"request_id\": \"7905abd5-ea30-4e4b-95c3-f2a49113b047\" #> }   # ----- update a page property notion$pages$properties$update(   \"23933ea0-c1e4-8104-897b-f5a09269e561\",   list(     `In stock` = list(       checkbox = TRUE     )   ) ) #> { #>   \"object\": \"page\", #>   \"id\": \"23933ea0-c1e4-8104-897b-f5a09269e561\", #>   \"created_time\": \"2025-07-23T05:01:00.000Z\", #>   \"last_edited_time\": \"2025-07-23T05:01:00.000Z\", #>   \"created_by\": { #>     \"object\": \"user\", #>     \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>   }, #>   \"last_edited_by\": { #>     \"object\": \"user\", #>     \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\" #>   }, #>   \"cover\": {}, #>   \"icon\": {}, #>   \"parent\": { #>     \"type\": \"database_id\", #>     \"database_id\": \"23933ea0-c1e4-8136-b37b-fa235c6f2a71\" #>   }, #>   \"archived\": false, #>   \"in_trash\": false, #>   \"properties\": { #>     \"In stock\": { #>       \"id\": \"q%3BL%5E\", #>       \"type\": \"checkbox\", #>       \"checkbox\": true #>     }, #>     \"Name\": { #>       \"id\": \"title\", #>       \"type\": \"title\", #>       \"title\": [ #>         { #>           \"type\": \"text\", #>           \"text\": { #>             \"content\": \"Tuscan Kale\", #>             \"link\": {} #>           }, #>           \"annotations\": { #>             \"bold\": false, #>             \"italic\": false, #>             \"strikethrough\": false, #>             \"underline\": false, #>             \"code\": false, #>             \"color\": \"default\" #>           }, #>           \"plain_text\": \"Tuscan Kale\", #>           \"href\": {} #>         } #>       ] #>     } #>   }, #>   \"url\": \"https://www.notion.so/Tuscan-Kale-23933ea0c1e48104897bf5a09269e561\", #>   \"public_url\": {}, #>   \"request_id\": \"2392c4f7-29f1-4947-938d-0fe7ba006966\" #> }"},{"path":"https://brenwin1.github.io/notionapi/reference/UsersEndpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class for Users Endpoint — UsersEndpoint","title":"R6 Class for Users Endpoint — UsersEndpoint","text":"Handle users operations Notion API Note: Access endpoint client instance, e.g., notion$users. instantiated directly.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/UsersEndpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R6 Class for Users Endpoint — UsersEndpoint","text":"list containing parsed API response.","code":""},{"path":[]},{"path":"https://brenwin1.github.io/notionapi/reference/UsersEndpoint.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class for Users Endpoint — UsersEndpoint","text":"UsersEndpoint$new() UsersEndpoint$list() UsersEndpoint$retrieve() UsersEndpoint$()","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/UsersEndpoint.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class for Users Endpoint — UsersEndpoint","text":"Initialise users endpoint. called directly, e.g., use notion$users instead.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/UsersEndpoint.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Users Endpoint — UsersEndpoint","text":"","code":"UsersEndpoint$new(client)"},{"path":"https://brenwin1.github.io/notionapi/reference/UsersEndpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Users Endpoint — UsersEndpoint","text":"client Notion Client instance","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/UsersEndpoint.html","id":"method-list-","dir":"Reference","previous_headings":"","what":"Method list()","title":"R6 Class for Users Endpoint — UsersEndpoint","text":"List users","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/UsersEndpoint.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Users Endpoint — UsersEndpoint","text":"","code":"UsersEndpoint$list(start_cursor = NULL, page_size = NULL)"},{"path":"https://brenwin1.github.io/notionapi/reference/UsersEndpoint.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Users Endpoint — UsersEndpoint","text":"start_cursor Character. pagination. provided, returns results starting cursor. NULL, returns first page results. page_size Integer. Number items return per page (1-100). Defaults 100.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/UsersEndpoint.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class for Users Endpoint — UsersEndpoint","text":"Endpoint documentation","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/UsersEndpoint.html","id":"method-retrieve-","dir":"Reference","previous_headings":"","what":"Method retrieve()","title":"R6 Class for Users Endpoint — UsersEndpoint","text":"Retrieve user","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/UsersEndpoint.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Users Endpoint — UsersEndpoint","text":"","code":"UsersEndpoint$retrieve(user_id)"},{"path":"https://brenwin1.github.io/notionapi/reference/UsersEndpoint.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for Users Endpoint — UsersEndpoint","text":"user_id Character (required). ID user retrieve.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/UsersEndpoint.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class for Users Endpoint — UsersEndpoint","text":"Endpoint documentation","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/UsersEndpoint.html","id":"method-me-","dir":"Reference","previous_headings":"","what":"Method me()","title":"R6 Class for Users Endpoint — UsersEndpoint","text":"Retrieve bot User associated API token","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/UsersEndpoint.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for Users Endpoint — UsersEndpoint","text":"","code":"UsersEndpoint$me()"},{"path":"https://brenwin1.github.io/notionapi/reference/UsersEndpoint.html","id":"details-2","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class for Users Endpoint — UsersEndpoint","text":"Endpoint documentation","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/UsersEndpoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class for Users Endpoint — UsersEndpoint","text":"","code":"notion <- notion_client()  # ----- list all users notion$users$list() #> { #>   \"object\": \"list\", #>   \"results\": [ #>     { #>       \"object\": \"user\", #>       \"id\": \"fda12729-108d-4eb5-bbfb-a8f0886794d1\", #>       \"name\": \"Brenwin\", #>       \"avatar_url\": {}, #>       \"type\": \"person\", #>       \"person\": {} #>     }, #>     { #>       \"object\": \"user\", #>       \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\", #>       \"name\": \"brenwin-internal\", #>       \"avatar_url\": {}, #>       \"type\": \"bot\", #>       \"bot\": { #>         \"owner\": { #>           \"type\": \"workspace\", #>           \"workspace\": true #>         }, #>         \"workspace_name\": \"Brenwin's Notion\", #>         \"workspace_limits\": { #>           \"max_file_upload_size_in_bytes\": 5368709120 #>         } #>       } #>     } #>   ], #>   \"next_cursor\": {}, #>   \"has_more\": false, #>   \"type\": \"user\", #>   \"user\": {}, #>   \"request_id\": \"fd112634-e4c9-4953-a557-43326deb3f41\" #> }   # ----- retrieve a user notion$users$retrieve(user_id = \"fda12729-108d-4eb5-bbfb-a8f0886794d1\") #> { #>   \"object\": \"user\", #>   \"id\": \"fda12729-108d-4eb5-bbfb-a8f0886794d1\", #>   \"name\": \"Brenwin\", #>   \"avatar_url\": {}, #>   \"type\": \"person\", #>   \"person\": {}, #>   \"request_id\": \"f53db350-84cc-4efd-a8cc-cb9a01d0059b\" #> }   # ----- retrieve the bot User associated with the API token notion$users$me() #> { #>   \"object\": \"user\", #>   \"id\": \"6b786605-e456-4237-9c61-5efaff23c081\", #>   \"name\": \"brenwin-internal\", #>   \"avatar_url\": {}, #>   \"type\": \"bot\", #>   \"bot\": { #>     \"owner\": { #>       \"type\": \"workspace\", #>       \"workspace\": true #>     }, #>     \"workspace_name\": \"Brenwin's Notion\", #>     \"workspace_limits\": { #>       \"max_file_upload_size_in_bytes\": 5368709120 #>     } #>   }, #>   \"request_id\": \"065294fa-c8a4-465a-af1f-07360dd262cf\" #> }"},{"path":"https://brenwin1.github.io/notionapi/reference/no_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Create empty property configuration — no_config","title":"Create empty property configuration — no_config","text":"Helper function creates empty named list property configurations require additional settings. Many database properties like text, checkbox date need configuration settings. function returns empty configuration ({} JSON) properties expect.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/no_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create empty property configuration — no_config","text":"","code":"no_config()"},{"path":"https://brenwin1.github.io/notionapi/reference/no_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create empty property configuration — no_config","text":"empty named list serialises {} JSON","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/notionapi-package.html","id":null,"dir":"Reference","previous_headings":"","what":"notionapi: R Client for the Notion API — notionapi-package","title":"notionapi: R Client for the Notion API — notionapi-package","text":"Provides R interface Notion API, enabling users programatically interact Notion pages, databases, blocks, comments, users.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/notionapi-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"notionapi: R Client for the Notion API — notionapi-package","text":"Maintainer: Brenwin Ang brenwinalj@gmail.com [copyright holder]","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/print.notion_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the result of a Notion API call — print.notion_response","title":"Print the result of a Notion API call — print.notion_response","text":"Print result Notion API call","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/print.notion_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the result of a Notion API call — print.notion_response","text":"","code":"# S3 method for class 'notion_response' print(x, ...)"},{"path":"https://brenwin1.github.io/notionapi/reference/print.notion_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the result of a Notion API call — print.notion_response","text":"x result object. ... Ignored.","code":""},{"path":"https://brenwin1.github.io/notionapi/reference/print.notion_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the result of a Notion API call — print.notion_response","text":"JSON result.","code":""},{"path":"https://brenwin1.github.io/notionapi/news/index.html","id":"notionapi-development-version","dir":"Changelog","previous_headings":"","what":"notionapi (development version)","title":"notionapi (development version)","text":"Initial CRAN submission.","code":""}]
